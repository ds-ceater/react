html,
body {
  height: 100%;
}

body {
  font-family: 'futura_r', 'Helvetica Neue', 'Helvetica', 'Arial', 'Avenir', 'Hiragino Sans', "游ゴシック体", YuGothic, "Yu Gothic Medium", YuGothic, 'ヒラギノ角ゴシック', 'メイリオ', Meiryo, 'ＭＳ Ｐゴシック', 'MS PGothic', sans-serif;
  font-size: 1.6rem;
  -webkit-text-size-adjust: 100%;
  -moz-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  text-size-adjust: 100%;
  overflow-x: hidden;
}

// <uniquifier>: Use a unique and descriptive class name
// <weight>: Use a value from 400 to 800

.eb-garamond {
  font-family: "EB Garamond", serif;
  font-optical-sizing: auto;
  font-weight: 600;
  font-style: normal;
}

// color
$dark1: #282828;
$dark2: #4d4d4d;
$dark3: #d8d8d8;
$dark4: #fafafa;
$navy: #1D376D;
$blue: #9ed5ff;
$blue-dark: #0069b1;
$skyblue: #578ED9;
$red: rgba(255, 132, 183, 0.493);
$red: #ff84b77e;
$red100: #ffa9cd;


//space
$d0: 4px;
$d1: 8px;
$d2: 16px;
$d3: 24px;
$d4: 32px;
$d5: 40px;
$d6: 48px;
$d7: 56px;
$d8: 64px;
$d9: 72px;
$d10: 80px;

// メディアクエリ
$breakpoint: (
  sp: 'screen and (max-width: 767px)',
  tab: 'screen and (max-width: 1024px)',
  pc: 'screen and (min-width: 1025px)'
);

@mixin mq($bp) {
  @media #{map-get($breakpoint, $bp)} {
    @content;
  }
}

@mixin bganime {
  background: linear-gradient(250deg, $blue 7%, $red 98%);
  background-size: 400% 400%;
  animation: bggradient 8s ease infinite;

  @keyframes bggradient {
    0% {
      background-position: 0% 50%;
    }

    50% {
      background-position: 100% 50%;
    }

    100% {
      background-position: 0% 50%;
    }
  }
}

body {
  color: $dark1;
}

a {
  text-decoration: none;
}

h1 {
  font-weight: normal;
}

p {
  line-height: 1.7;
}


.header {
  // background-color: $dark2;
  height: 80px;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 98;

  &_wrap {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 0 auto;
    padding: $d3 6rem;
    backdrop-filter: blur(20px);
    // border: 1px solid rgba(255, 255, 255, 0.4);
    border-right-color: rgba(255, 255, 255, 0.2);
    border-bottom-color: rgba(255, 255, 255, 0.2);

    @include mq(sp) {
      display: block;
      max-width: 100vw;
      padding: 0;
      position: relative;
      height: $d8;
    }
  }

  &_link {
    img {
      width: 70px;
      height: auto;

      @include mq(sp) {
        width: 2rem;
      }
    }

    @include mq(sp) {
      position: absolute;
      top: 16px;
      left: 16px;
      z-index: 5;
    }
  }



  .openBtn {
    display: none;

    @include mq(sp) {

      position: fixed;
      top: $d1;
      right: $d2;
      width: 44px;
      height: 44px;
      z-index: 10;
      display: flex;
      flex-direction: column;
      justify-content: space-evenly;
      align-items: center;
      font-size: 1rem;
      line-height: 1;
      cursor: pointer;

      span {
        display: block;
        background-color: $dark2;
        width: 36px;
        height: 2px;
        transition: all 0.5s ease;
      }

      &.open {
        background-color: $blue;
        z-index: 6;

        span {
          background-color: $dark2;

          &:nth-of-type(1) {
            transform: translateY(11px) rotate(45deg);
          }

          &:nth-of-type(2) {
            transform: scale(0);
          }

          &:nth-of-type(3) {
            transform: translateY(-12px) rotate(-45deg);
          }
        }

      }

      &.close {
        span {
          display: block;
          background-color: $dark2;
          width: 36px;
          height: 2px;
          transition: all 0.5s ease;
        }
      }
    }

  }

  .nav {
    &_list {
      display: flex;
      color: $dark1;
      justify-content: space-between;
      width: 400px;
      z-index: 5;

      @include mq(sp) {
        flex-direction: column;
        padding: $d2;
        position: relative;
        transition: all 0.5s ease;
        width: 100%;
        top: -500px;
        height: 100px;
      }

      &.open {
        width: 100vw;
        height: 100vh;
        top: 0;
        left: 0;
        background: linear-gradient(250deg, $blue 10%, $red100 100%);
        padding: $d5;
        z-index: 4;
        justify-content: space-around;
      }

      &.close {
        top: -500px;
      }

      &.under {
        color: $dark1;
      }
    }

    &_item {
      font-size: 1.5rem;
      list-style: none;

      @include mq(sp) {
        margin: 15px auto;

      }
    }
  }

}

// カードここから

.cardWrapper {
  position: relative;
  width: 100%;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
}

// SCSSのリスト変数で基本となる色相を定義
$base-colors: (
  // 9ed5ffの透明度を50%に
  rgba(158, 213, 255, 0.5),
  // E0916480の透明度をさらに下げる（元の0.5から0.3に）
  rgba(224, 145, 100, 0.3),
  // A482DD80の透明度をさらに下げる（元の0.5から0.3に）
  rgba(164, 130, 221, 0.3),
  // ff84b77eの透明度をさらに下げる（元の0.5から0.3に）
  rgba(255, 132, 183, 0.3)
);

// カードごとに色相をずらしてアニメーションを適用
@for $i from 1 through length($base-colors) {
  .cardOwn:nth-of-type(#{$i}) {
    // 基本となる色
    $start-color: nth($base-colors, $i);
    // 色相をずらした終了色
    $end-color: adjust-hue($start-color, 90deg);

    background: linear-gradient(250deg, $start-color 12%, $end-color 98%);
    background-size: 400% 400%;
    animation: cardGradient 4s ease infinite;

    @keyframes cardGradient {
      0% {
        background-position: 0% 50%;
      }

      50% {
        background-position: 100% 50%;
      }

      100% {
        background-position: 0% 50%;
      }
    }
  }
}

.cardOwn {
  position: absolute;
  width: 24vw *0.7;
  height: 32vw*0.7;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  color: white;
  font-size: 1.2rem;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  border-radius: 8px;
  padding: $d3;

  @include mq(sp) {
    width: 30vw;
    height: 40vw;
    padding: $d1;
  }

  &Ttl {
    font-size: 2rem;
    margin-bottom: $d2;
    text-align: left;

    @include mq(sp) {
      font-size: 1rem;
    }

  }

  &Text {
    font-size: 1rem;
    line-height: 1.5;

    @include mq(sp) {
      font-size: 0.7rem;
    }
  }

}

//　カードここまで

.container {
  .btn {
    border: 1px solid $dark2;
    border-radius: 20px;
    font-size: 0.8rem;
    padding: $d1 $d2;
    text-align: center;
    width: 160px;

    &:hover {
      background-color: $dark2;
      color: #fff;
    }
  }

  // .loadingFade {
  //   opacity: 0;
  // }

  // .fadein {
  //   opacity: 0;
  // }

  .top {
    color: $dark1;
    max-width: 100%;
    height: 100vh;
    z-index: 0;
    position: relative;
    @include bganime();


    .loop {
      overflow: hidden;
      display: flex;
      opacity: 0.2;
      position: absolute;
      top: 40%;
      left: 0;
      width: 120vw;
      height: 100vw;
      margin-inline: calc(50% - 50vw);
      z-index: -1;
      transform: rotate(-20deg);

      &_item {
        color: #fff;
        flex-shrink: 0;
        white-space: nowrap;
        font-size: 240px;
        font-weight: bold;

        &:nth-child(odd) {
          animation: MoveRight 24s -12s infinite linear;
        }

        &:nth-child(even) {
          animation: MoveRight2 24s infinite linear;
        }
      }

      @keyframes MoveRight {
        from {
          transform: translateX(-100%);
        }

        to {
          transform: translateX(100%);
        }
      }

      @keyframes MoveRight2 {
        from {
          transform: translateX(-200%);
        }

        to {
          transform: translateX(0);
        }
      }
    }

    &_contents {
      height: 100vh;
      display: grid;
      place-content: center;
      text-align: center;
      margin-top: -60px;
      z-index: 1;



    }

    .name {
      &_wrap {
        font-weight: normal;
        position: absolute;
        top: 65%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 2;
        text-align: center;
        width: 100vw;
        filter: drop-shadow(0 0 0.3rem #ffffff);
      }

      &_comment {
        font-size: clamp(1.2rem, 3.5vw, 4.5rem);
        margin-bottom: 2vw;
        font-weight: 100;
      }

      &_job,
      &_title {
        font-size: clamp(1.2rem, 3.5vw, 4.5rem);
        font-weight: 100;
      }

      &_job {
        margin-bottom: 0.8vw;
        ;
      }

      &_name {
        font-size: clamp(4.44rem, 12vw, 15rem);
        letter-spacing: 0.2vw;
        margin-bottom: 0.8vw;
        overflow: hidden;
      }
    }

    .scrolldown1 {
      position: absolute;
      left: 50%;
      bottom: 10px;
      height: 50px;

      span {
        position: absolute;
        left: -15px;
        top: -15px;
        font-size: 0.7rem;
        letter-spacing: 0.05em;
      }

      &::after {
        content: "";
        position: absolute;
        top: 0;
        width: 1px;
        height: 30px;
        background: $dark2;
        animation: pathmove 1.4s ease-in-out infinite;
        opacity: 0;
      }

      @keyframes pathmove {
        0% {
          height: 0;
          top: 0;
          opacity: 0;
        }

        30% {
          height: 30px;
          opacity: 1;
        }

        100% {
          height: 0;
          top: 50%;
          opacity: 0;
        }
      }
    }

  }

  .section {

    &_inner {
      max-width: 1000px;
      margin: 0 auto;
      padding: $d8 $d2;
    }

    &_ttl {
      font-size: 3rem;
      margin-bottom: $d4;
      word-break: auto-phrase;

      @include mq(sp) {
        font-size: 1.5rem;
      }

      &-en {
        font-size: 5rem;
        margin-right: $d4;

        @include mq(sp) {
          font-size: 3rem;
        }
      }

      &-ja {
        font-size: 1rem;

        @include mq(sp) {
          font-size: 0.8rem;
        }
      }
    }

    &_text {
      font-size: 1rem;
    }
  }

  .about {
    &_ttl {
      font-size: 1.5rem;
      margin-bottom: $d3;

      &-ja {
        padding-right: $d2;
      }

      &-en {
        font-size: 1rem;
      }
    }

    &_box {
      display: flex;
      align-items: center;

      @include mq(sp) {
        flex-direction: column;
      }

      &-pic {
        margin-right: $d5;

        @include mq(sp) {
          margin: 0 auto $d4;
        }
      }

      &-text {
        width: 70%;

        @include mq(sp) {
          width: 100%;
        }
      }

    }
  }

  .skills {
    @include bganime();

    &_wrap {
      display: flex;
      flex-wrap: wrap;
      width: 100%;
      gap: $d4;
      justify-content: space-between;
    }

    .section {
      &_contents {
        max-width: 100%;

        @include mq(sp) {
          max-width: 100%;

          width: 100%;

        }
      }
    }

    &_blk {
      display: flex;
      gap: $d4;
      width: 48%;

      @include mq(sp) {
        width: 100%;
        flex-direction: column;
        align-items: center;
      }

      &:not(:last-child) {
        margin-bottom: $d8;
      }

      &-card {
        // カードのクラス名と色のペアをマップで定義
          $card-colors: (
            cardCoding: rgba(158, 213, 255, 0.5),
            cardDesign: rgba(224, 145, 100, 0.3),
            cardMovie: rgba(164, 130, 221, 0.3),
            cardIllust: rgba(255, 132, 183, 0.3)
          );
        
        // @eachループを使って、マップの各ペアを処理
        @each $class, $start-color in $card-colors {
          .#{$class} {
            // 色相をずらした終了色
            $end-color: adjust-hue($start-color, 90deg);
        
            background: linear-gradient(250deg, $start-color 12%, $end-color 98%);
            background-size: 400% 400%;
            animation: cardGradient 4s ease infinite;
          }
        }
        
        // @keyframesは一度だけ定義すればOK
        @keyframes cardGradient {
          0% {
            background-position: 0% 50%;
          }
        
          50% {
            background-position: 100% 50%;
          }
        
          100% {
            background-position: 0% 50%;
          }
        }
        .cardOwn {
          position: static;
          width: 10vw;
          height: 13vw;
          padding: $d1;

          @include mq(sp) {
            width: 40vw;
            height: 52vw;
          }

          &Ttl {
            font-size: 1.5rem;
          }

          &Text {
            font-size: 0.8rem;
          }

          &.cardCoding {}

          &.cardDesign {}

          &.cardMovie {}

          &.cardIllust {}
        }
      }

      &-ttl {
        margin-bottom: $d3;
        font-size: 2rem;

        @include mq(sp) {
          font-size: 1.8rem;
        }
      }

      &-contents {
        margin-bottom: $d2;
      }

      &-tools {
        font-size: 1rem;

        &-ttl {
          padding-right: $d2;
        }
      }
    }
  }

  .works {
    &_list {
      display: flex;
      flex-wrap: wrap;
      justify-content: space-between;
      gap: $d8 $d1;
    }

    figure {
      text-align: center;
    }

    img {
      margin-bottom: $d2;
      filter: drop-shadow(0px 0px 2px $dark3);
      max-height: 245px;
      width: auto;
    }

    &_item {
      display: flex;
      flex-direction: column;
      width: 45%;

      &-job {
        font-size: 0.8rem;
        margin-bottom: $d1;

        @include mq(sp) {
          font-size: 0.7rem;
        }

      }

      &-ttl {
        font-size: 1.2rem;
        margin-bottom: $d2;
        flex-grow: 1;

        @include mq(sp) {
          font-size: 0.9rem;
          word-break: auto-phrase;
        }
      }

      .btn {
        margin-top: auto;
      }

    }

    &_caution {
      margin-top: $d4;
      font-size: 1rem;
      padding-left: 1em;
      text-indent: -1em;
    }
  }

  .detail {
    &_info {
      margin-bottom: $d3;

      .info {
        &_list {
          display: flex;
          font-size: 0.8rem;
          margin-bottom: $d1;
        }

        &_ttl {
          margin-right: $d2;
        }
      }
    }

    &_mock {
      background-color: $dark4;
      padding: $d4;
      display: grid;
      margin-bottom: $d5;
      place-content: center;

      &-pic {
        max-width: 720px;

        @include mq(sp) {
          max-width: 300px;
        }
      }
    }

    &_contents {
      margin: 0 auto;
      max-width: 720px;

    }

    &_comment {
      font-size: 1rem;
      line-height: 1.7;
      margin: 0 auto $d5;

    }

    &_box {
      display: flex;
      margin-bottom: $d6;

      &-ttl {
        font-size: 1rem;
        font-weight: bold;
        width: 200px;

        @include mq(sp) {
          width: 100px;
        }
      }

      &-text {
        &Wrap {
          width: calc(100% - 200px);

          @include mq(sp) {
            width: calc(100% - 100px);
          }
        }

        font-size: 1rem;

      }
    }

    &_point {
      &-contents {
        &-wrap {
          margin-bottom: $d10;

          &:nth-child(odd) {
            .detail_point-contents {
              flex-direction: row-reverse;

              @include mq(sp) {
                flex-direction: column;
              }
            }
          }
        }

        display: flex;
        align-items: center;
        gap: $d3;

        @include mq(sp) {
          flex-direction: column;
        }

        &-ttl {
          font-size: 2rem;
          margin-bottom: $d5;
        }
      }

      &-pic {
        &-wrap {
          background-color: $dark4;
          // margin-right: $d4;
          width: 260px;
          height: 260px;
          display: grid;
          place-content: center;
          padding: $d1;
          aspect-ratio: 1 / 1;

          @include mq(sp) {
            width: 80%;
            height: auto;
            margin: 0 auto $d2;
          }
        }

        margin: 0 auto;
      }

      &-ttl {
        font-size: 3rem;
        margin-bottom: $d3;
      }

      &-text {
        font-size: 1rem;
      }

    }
  }
}

.contact {
  background-color: $dark4;

  iframe {
    margin: 0 auto;

    .RVEQke {
      background-color: none;
    }
  }

  .btn {
    display: block;
    margin: 0 auto;
  }

  // &_form {
  //   display: flex;
  //   flex-direction: column;
  //   gap: $d3;
  // }
}

.rotating-cards-container {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 1;
  /* name_wrapより低いz-indexを設定 */
}

.footer {
  background-color: $dark4;
  width: 100%;

  &_wrap {
    display: flex;
    justify-content: space-between;
    align-items: center;
    max-width: 1000px;
    margin: 0 auto;
    padding: $d2;
  }

  .nav {
    &_list {
      color: $dark1;
      display: flex;
      justify-content: space-between;
      width: 400px;
      z-index: 5;

      @include mq(sp) {
        width: 240px;
      }
    }

    &_item {
      font-size: 1.5rem;
    }
  }
}

.detail {
  margin: $d6 auto;
}